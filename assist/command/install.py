"""Install

The install command creates the .assistrc file. This file
is autogenerated and should not be modified manually.

"""

import sys
import site
import textwrap
import os.path as pth

DESC = """
Create the .assistrc file and source it in your .bash_profile or
.bashrc file.

"""


def add_parser(subp, raw):
    """Add a parser to the main subparser. """
    subp.add_parser('install', help='install assist',
                    formatter_class=raw,
                    description=textwrap.dedent(DESC))


def disp(msg):
    "Print message to stdout. "
    sys.stdout.write(msg)


def source_assistrc():
    """Source the .assistrc file in the .bashrc file. """
    bash_map = {
        'Darwin': '.bash_profile',
        'darwin': '.bash_profile',
        'Linux': '.bashrc',
        'linux': '.bashrc',
    }
    platform = sys.platform
    try:
        bashrc_path = pth.expandvars('$HOME/%s' % bash_map[platform])
    except KeyError:
        disp('Error: %s platform not supported\n' % platform)
        exit(2)
    disp('checking %s ... ' % bashrc_path)
    if pth.exists(bashrc_path):
        expr = [
            'source ~/.assistrc\n',
            'source $HOME/.assistrc\n',
            pth.expandvars('source $HOME/.assistrc\n'),
        ]
        for content_line in open(bashrc_path, 'r'):
            for line in expr:
                if line == content_line:
                    disp('ok\n')
                    return
    with open(bashrc_path, 'a') as content_file:
        disp('\n    including .assistrc\n')
        content_file.write('source ~/.assistrc\n')


def append_variable(cfile, var, val):
    """Writes a bash command to check if a variable is missing a
    value."""
    cfile.write('if [[ ":$%s:" != *":%s:"* ]]; then\n' % (var, val))
    cfile.write('    export %s=%s:$%s\n' % (var, val, var))
    cfile.write('fi\n')


def assistrc():
    """Create the assistrc file. """
    rc_path = pth.expandvars('$HOME/.assistrc')
    disp('writing %s ... ' % rc_path)
    with open(rc_path, 'w') as rcfile:
        disp('\n    system wide path: %s/bin\n' % sys.prefix)
        append_variable(rcfile, 'PATH', '%s/bin' % sys.prefix)
        disp('    user path: %s/bin\n' % site.getuserbase())
        append_variable(rcfile, 'PATH', '%s/bin' % site.getuserbase())
        path = pth.abspath(pth.dirname(__file__)+'/../include')
        disp('    include: %s\n' % path)
        append_variable(rcfile, 'C_INCLUDE_PATH', path)
        append_variable(rcfile, 'CPLUS_INCLUDE_PATH', path)


def run(_):
    """Run the command. """
    source_assistrc()
    assistrc()
